name: 'Setup your build process!'

permissions:
  contents: write
  actions: write

on:
  workflow_dispatch:
    inputs:
      set_batch:
        description: 'Which batch to build?'
        required: true
        type: choice
        default: OnePlus
        options:
          - OnePlus
          - GKI
      set_manager:
        description: 'Which manager to use?'
        required: true
        type: choice
        default: KernelSU-Next
        options:
          - KernelSU-Next
          - SukiSU-Ultra
      make_release:
        description: 'Do you want to create a release?'
        required: true
        type: boolean
        default: false
      mark_prerelease:
        description: 'Mark release as prerelease?'
        required: true
        type: boolean
        default: false

jobs:
  builds-non-bazel:
    strategy:
      fail-fast: true
      matrix:
        include:
          - model: OP10Pro
            soc: waipio
            branch: oneplus/sm8450
            manifest: oneplus_10_pro_v.xml
            android_version: android12
            kernel_version: "5.10"
          - model: OP10T
            soc: waipio
            branch: oneplus/sm8475
            manifest: oneplus_10t_v.xml
            android_version: android12
            kernel_version: "5.10"
          - model: OPAcePro
            soc: waipio
            branch: oneplus/sm8475
            manifest: oneplus_ace_pro_v.xml
            android_version: android12
            kernel_version: "5.10"
          - model: OP11
            soc: kalama
            branch: oneplus/sm8550
            manifest: oneplus_11_v.xml
            android_version: android13
            kernel_version: "5.15"
          - model: OPAce2
            soc: waipio
            branch: oneplus/sm8475
            manifest: oneplus_ace2_v.xml
            android_version: android13
            kernel_version: "5.10"
          - model: OP11R
            soc: waipio
            branch: oneplus/sm8475
            manifest: oneplus_11r_v.xml
            android_version: android13
            kernel_version: "5.10"
          - model: OPAce2Pro
            soc: kalama
            branch: oneplus/sm8550
            manifest: oneplus_ace2pro_v.xml
            android_version: android13
            kernel_version: "5.15"
          - model: OPOpen
            soc: kalama
            branch: oneplus/sm8550
            manifest: oneplus_open_v.xml
            android_version: android13
            kernel_version: "5.15"
    uses: ./.github/workflows/build.yml
    secrets: inherit
    with:
      model: ${{ matrix.model }}
      soc: ${{ matrix.soc }}
      branch: ${{ matrix.branch }}
      manifest: ${{ matrix.manifest }}
      android_version: ${{ matrix.android_version }}
      kernel_version: ${{ matrix.kernel_version }}

  builds-bazel:
    strategy:
      fail-fast: true
      matrix:
        include:
          - model: OP12
            soc: pineapple
            branch: oneplus/sm8650
            manifest: oneplus12_v.xml
            android_version: android14
            kernel_version: "6.1"
          - model: OPNord4
            soc: pineapple
            branch: oneplus/sm7675
            manifest: oneplus_nord_4_v.xml
            android_version: android14
            kernel_version: "6.1"
          - model: OP13
            soc: sun
            branch: oneplus/sm8750
            manifest: oneplus_13.xml
            android_version: android15
            kernel_version: "6.6"
          - model: OPAce5
            soc: pineapple
            branch: oneplus/sm8650
            manifest: oneplus_ace5.xml
            android_version: android14
            kernel_version: "6.1"
          - model: OPAce5Pro
            soc: sun
            branch: oneplus/sm8750
            manifest: oneplus_ace5_pro.xml
            android_version: android15
            kernel_version: "6.6"
          - model: OP13R
            soc: pineapple
            branch: oneplus/sm8650
            manifest: oneplus_13r.xml
            android_version: android14
            kernel_version: "6.1"
    uses: ./.github/workflows/build.yml
    secrets: inherit
    with:
      model: ${{ matrix.model }}
      soc: ${{ matrix.soc }}
      branch: ${{ matrix.branch }}
      manifest: ${{ matrix.manifest }}
      android_version: ${{ matrix.android_version }}
      kernel_version: ${{ matrix.kernel_version }}

  trigger-release:
    needs:
      - builds-non-bazel
      - builds-bazel
    runs-on: ubuntu-latest
    if: ${{ inputs.make_release }}
    env:
      REPO_OWNER: ${{ github.repository_owner }}
      REPO_NAME: ${{ github.event.repository.name }}
      GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      RELEASE_NAME: "${{ inputs.set_batch }} Kernels With ${{ inputs.set_manager }} & SUSFS"
      RELEASE_NOTES: |
        This release contains builds with the latest available ${{ inputs.set_manager }} and SUSFS!
        
        Modified Kernel Flasher:
        -> https://github.com/fatalcoder524/KernelFlasher
        
        ${{ inputs.set_manager }} Manager:
        -> https://github.com/KernelSU-Next/KernelSU-Next
        
        SUSFS Module:
        -> https://github.com/sidex15/ksu_module_susfs
        
        Mountify Module:
        -> https://github.com/backslashxx/mountify
        
        Unlimited Hotspot Module:
        -> https://github.com/felikcat/unlimited-hotspot
        
        Features:
        [+] ${{ inputs.set_manager }}
        [+] SUSFS à¶ž
        [+] Optimized for Magic Mount usage | Shamiko isn't needed anymore!
        [+] Google BBR Support | Use [this](https://github.com/fatalcoder524/TCP_Optimiser_Module) to enable
        [+] Maphide LineageOS Detections
        [+] Futile Maphide for jit-zygote-cache Detections
        [+] Mountify Support
        [+] Unlimited Hotspot Support
        [+] Forced ECN (Explicit Congestion Notification) for all connections by default
        [+] Added LZ4KD compression algorithm Support for ZRAM
        [+] Some minor optimizations

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Generate and Create New Tag
        run: |
            LATEST_TAG=$(gh api repos/$REPO_OWNER/$REPO_NAME/tags --jq '.[0].name')
            if [ -z "$LATEST_TAG" ]; then
              LATEST_TAG="oneplus-r0"
            fi
            NEW_TAG=$(echo "$LATEST_TAG" | awk -F'-r' '{suffix=$2; if (!suffix) suffix=0; suffix++; printf "%s-r%d", $1, suffix}')
            echo "New tag: $NEW_TAG"
            echo "NEW_TAG=${NEW_TAG}" >> $GITHUB_ENV
            git tag $NEW_TAG
            git push origin $NEW_TAG

      - name: Download Artifacts
        uses: actions/download-artifact@v4
        with:
          path: ./downloaded-artifacts

      - name: Create GitHub Release
        uses: actions/create-release@v1
        with:
          tag_name: ${{ env.NEW_TAG }}
          prerelease: ${{ inputs.mark_prerelease }}
          release_name: ${{ env.RELEASE_NAME }}
          body: ${{ env.RELEASE_NOTES }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NEW_TAG: ${{ env.NEW_TAG }}

      - name: Upload Release Assets Dynamically
        run: |
          for file in ./downloaded-artifacts/kernel-*/*; do
              if [ -d "$file" ]; then
                  continue
              fi
              echo "Uploading $file..."
              gh release upload ${{ env.NEW_TAG }} "$file"
              done
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NEW_TAG: ${{ env.NEW_TAG }}

      - name: Display Files Uploaded
        run: |
          echo "GitHub release created with the following files:"
          ls ./downloaded-artifacts/**/*